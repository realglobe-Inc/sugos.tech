{
  "namespaces": [
    {
      "name": "UrlConstants",
      "description": "Constants of url",
      "access": "",
      "virtual": false
    }
  ],
  "properties": [
    {
      "name": "SPOT_URL",
      "access": "",
      "virtual": false,
      "description": "URL for spots",
      "type": ""
    },
    {
      "name": "CALLER_URL",
      "access": "",
      "virtual": false,
      "description": "URL for callers",
      "type": ""
    }
  ],
  "classes": [
    {
      "name": "Entity",
      "description": "",
      "extends": [],
      "access": "",
      "virtual": true,
      "fires": "",
      "constructor": {
        "name": "Entity",
        "description": "Abstract entity",
        "parameters": [],
        "examples": []
      },
      "functions": [
        {
          "name": "set",
          "access": "",
          "virtual": false,
          "description": "Set values",
          "parameters": [
            {
              "name": "values",
              "type": "Object",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": []
        },
        {
          "name": "del",
          "access": "",
          "virtual": false,
          "description": "Delete value",
          "parameters": [
            {
              "name": "propName",
              "type": "string",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": []
        }
      ]
    },
    {
      "name": "ActorEntity",
      "description": "",
      "extends": [],
      "access": "",
      "virtual": false,
      "fires": "",
      "constructor": {
        "name": "ActorEntity",
        "description": "Entity for spot",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "CallerEntity",
      "description": "",
      "extends": [],
      "access": "",
      "virtual": false,
      "fires": "",
      "constructor": {
        "name": "CallerEntity",
        "description": "Entity for caller",
        "parameters": [],
        "examples": []
      }
    },
    {
      "name": "Service",
      "description": "",
      "extends": [],
      "access": "",
      "virtual": true,
      "fires": "",
      "constructor": {
        "name": "Service",
        "description": "Abstract service",
        "parameters": [
          {
            "name": "storage",
            "type": "Object",
            "description": "SgStorage instance",
            "default": "",
            "optional": "",
            "nullable": ""
          },
          {
            "name": "options",
            "type": "Object",
            "description": "Optional settings",
            "default": "",
            "optional": true,
            "nullable": ""
          },
          {
            "name": "options.prefix",
            "type": "string",
            "description": "Prefix of keys service use",
            "default": "",
            "optional": true,
            "nullable": ""
          },
          {
            "name": "options.indices",
            "type": "string",
            "description": "Name of index keys",
            "default": "[]",
            "optional": true,
            "nullable": ""
          },
          {
            "name": "options.entity",
            "type": "string",
            "description": "Name of entity",
            "default": "",
            "optional": true,
            "nullable": ""
          }
        ],
        "examples": []
      },
      "functions": [
        {
          "name": "ack",
          "access": "",
          "virtual": false,
          "description": "Handle and callback as socket.IO acknowledge",
          "parameters": [
            {
              "name": "handler",
              "type": "function",
              "description": "Data handler function",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "function",
            "description": ""
          }
        },
        {
          "name": "save",
          "access": "",
          "virtual": false,
          "description": "Save entity to storage",
          "parameters": [
            {
              "name": "entity",
              "type": "Entity",
              "description": "Entity to save",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise",
            "description": ""
          }
        },
        {
          "name": "find",
          "access": "",
          "virtual": false,
          "description": "Get entity by key",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of the entity",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            },
            {
              "name": "options.strict",
              "type": "boolean",
              "description": "Throw error if not found",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Entity>",
            "description": ""
          }
        },
        {
          "name": "findByIndex",
          "access": "",
          "virtual": false,
          "description": "Find entity bin index.",
          "parameters": [
            {
              "name": "indexKey",
              "type": "string",
              "description": "Key of the index.",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "indexValue",
              "type": "string",
              "description": "Value of the index",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Find options",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Entity>",
            "description": ""
          }
        },
        {
          "name": "destroy",
          "access": "",
          "virtual": false,
          "description": "Destroy entity",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of the entity",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<number>",
            "description": ""
          }
        }
      ]
    },
    {
      "name": "ActorService",
      "description": "",
      "extends": [
        "Service"
      ],
      "access": "",
      "virtual": false,
      "fires": "",
      "constructor": {
        "name": "ActorService",
        "description": "",
        "parameters": [],
        "examples": []
      },
      "functions": [
        {
          "name": "setupActor",
          "access": "",
          "virtual": false,
          "description": "Setup a spot.",
          "parameters": [
            {
              "name": "socketId",
              "type": "string",
              "description": "Id of socket.",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "key",
              "type": "string",
              "description": "Key to of spot",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "token",
              "type": "string",
              "description": "Actor access token.",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Object>",
            "description": "- Created spot."
          }
        },
        {
          "name": "teardownActor",
          "access": "",
          "virtual": false,
          "description": "Teardown a spot.",
          "parameters": [
            {
              "name": "socketId",
              "type": "string",
              "description": "Id of socket.",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "key",
              "type": "string",
              "description": "Key to of spot",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "token",
              "type": "string",
              "description": "Actor access token.",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Object>",
            "description": "- Created spot."
          }
        },
        {
          "name": "updateSpec",
          "access": "",
          "virtual": false,
          "description": "Handle \"spec\" event",
          "parameters": [
            {
              "name": "socketId",
              "type": "string",
              "description": "Id of socket.",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "$name",
              "type": "string",
              "description": "Spec name",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "$spec",
              "type": "Object",
              "description": "Spec data",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Object>",
            "description": "- Created spot."
          }
        },
        {
          "name": "findBySocketId",
          "access": "",
          "virtual": false,
          "description": "Find by socket id",
          "parameters": [
            {
              "name": "socketId",
              "type": "string",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise",
            "description": ""
          }
        },
        {
          "name": "ack",
          "access": "",
          "virtual": false,
          "description": "Handle and callback as socket.IO acknowledge",
          "parameters": [
            {
              "name": "handler",
              "type": "function",
              "description": "Data handler function",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "function",
            "description": ""
          }
        },
        {
          "name": "save",
          "access": "",
          "virtual": false,
          "description": "Save entity to storage",
          "parameters": [
            {
              "name": "entity",
              "type": "Entity",
              "description": "Entity to save",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise",
            "description": ""
          }
        },
        {
          "name": "find",
          "access": "",
          "virtual": false,
          "description": "Get entity by key",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of the entity",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            },
            {
              "name": "options.strict",
              "type": "boolean",
              "description": "Throw error if not found",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Entity>",
            "description": ""
          }
        },
        {
          "name": "findByIndex",
          "access": "",
          "virtual": false,
          "description": "Find entity bin index.",
          "parameters": [
            {
              "name": "indexKey",
              "type": "string",
              "description": "Key of the index.",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "indexValue",
              "type": "string",
              "description": "Value of the index",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Find options",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Entity>",
            "description": ""
          }
        },
        {
          "name": "destroy",
          "access": "",
          "virtual": false,
          "description": "Destroy entity",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of the entity",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<number>",
            "description": ""
          }
        }
      ]
    },
    {
      "name": "CallerService",
      "description": "",
      "extends": [
        "Service"
      ],
      "access": "",
      "virtual": false,
      "fires": "",
      "constructor": {
        "name": "CallerService",
        "description": "",
        "parameters": [],
        "examples": []
      },
      "functions": [
        {
          "name": "joinToActor",
          "access": "",
          "virtual": false,
          "description": "Join to a spot",
          "parameters": [
            {
              "name": "socketId",
              "type": "string",
              "description": "Connecting socket",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "spot",
              "type": "ActorEntity",
              "description": "Actor to join",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Object>",
            "description": "caller instance"
          }
        },
        {
          "name": "leaveFromActor",
          "access": "",
          "virtual": false,
          "description": "Leave from a spot.",
          "parameters": [
            {
              "name": "socketId",
              "type": "string",
              "description": "Connecting socket",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "spot",
              "type": "ActorEntity",
              "description": "Actor to leave",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Object>",
            "description": "caller instance"
          }
        },
        {
          "name": "findBySocketId",
          "access": "",
          "virtual": false,
          "description": "Find by socket id",
          "parameters": [
            {
              "name": "socketId",
              "type": "string",
              "description": "",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise",
            "description": ""
          }
        },
        {
          "name": "ack",
          "access": "",
          "virtual": false,
          "description": "Handle and callback as socket.IO acknowledge",
          "parameters": [
            {
              "name": "handler",
              "type": "function",
              "description": "Data handler function",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "function",
            "description": ""
          }
        },
        {
          "name": "save",
          "access": "",
          "virtual": false,
          "description": "Save entity to storage",
          "parameters": [
            {
              "name": "entity",
              "type": "Entity",
              "description": "Entity to save",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise",
            "description": ""
          }
        },
        {
          "name": "find",
          "access": "",
          "virtual": false,
          "description": "Get entity by key",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of the entity",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Optional settings",
              "default": "{}",
              "optional": true,
              "nullable": ""
            },
            {
              "name": "options.strict",
              "type": "boolean",
              "description": "Throw error if not found",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Entity>",
            "description": ""
          }
        },
        {
          "name": "findByIndex",
          "access": "",
          "virtual": false,
          "description": "Find entity bin index.",
          "parameters": [
            {
              "name": "indexKey",
              "type": "string",
              "description": "Key of the index.",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "indexValue",
              "type": "string",
              "description": "Value of the index",
              "default": "",
              "optional": "",
              "nullable": ""
            },
            {
              "name": "options",
              "type": "Object",
              "description": "Find options",
              "default": "",
              "optional": true,
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<Entity>",
            "description": ""
          }
        },
        {
          "name": "destroy",
          "access": "",
          "virtual": false,
          "description": "Destroy entity",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "description": "Key of the entity",
              "default": "",
              "optional": "",
              "nullable": ""
            }
          ],
          "examples": [],
          "returns": {
            "type": "Promise.<number>",
            "description": ""
          }
        }
      ]
    }
  ]
}